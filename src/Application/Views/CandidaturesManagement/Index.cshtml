@{
    ViewData["Title"] = "Gestão de inscrições";
    @model IPagedList<CandidateDTOOutput>
    string filter = ViewBag.Filter ?? null;
    var begin = ViewBag.Begin as DateTime?;
    var end = ViewBag.End as DateTime?;
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0">
                    <h6>Todas incrições</h6>
                  
                </div>
                <div class="card-body  pt-0 pb-2">

                    <div class="search-area">
                        <form action="candidaturesManagement" method="get">
                            <div class="row col-md-6">
                                <div class="input-group ">
                                    <input type="text" class="form-control noOutline" value="@filter" name="filter" placeholder="Pesquisa por núm, nome, bi e pass." />
                                    @if (!string.IsNullOrWhiteSpace(filter))
                                    {
                                        <a href=@Url.Action("Index", new { page=1, end,begin}) class="input-group-text text-body" onclick=""> <i class="fas fa-times"></i> </a>
                                    }
                                    <button type="submit" class="input-group-text text-body"><i class="fas fa-search" aria-hidden="true"></i></button>
                                </div>
                             
                            </div>
                        </form>
                        <hr />
                    </div>

                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-5">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Nº Processo</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">BI/Passaporte</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center text-center">Nome</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Nacionalidade</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Opção</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Curso</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Data</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 text-center">Estado</th>
                                    <th class="text-end opacity-7"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="text-sm-center">
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center">@(item.OrderNumber.ToString())</p>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center">@(item.BINumber ?? item.PassportNumber)</p>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center text-center">@item.Name</p>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center">@item.Nationality</p>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center">@item.Graduation</p>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0 text-center">@item.Course</p>
                                        </td>
                                        <td class="align-middle text-center">
                                            <span class="text-secondary text-xs font-weight-bold">@item.BirthdateF</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="badge badge-sm bg-gradient-secondary">@item.Status</span>
                                        </td>
                                        <td class="align-middle">
                                            <a href="/candidaturesManagement/Details/@item.Id" class="text-secondary font-weight-bold btn-sm bg-gradient-secondary text-white" data-toggle="tooltip" data-original-title="Ver detalhes">
                                                Ver
                                            </a>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                        <hr />
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = 1, filter, begin, end }),
                       new PagedListRenderOptionsBase
                       {
                           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                           DisplayLinkToLastPage = PagedListDisplayMode.Always,
                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                           LinkToFirstPageFormat = "Ínicio",
                           LinkToPreviousPageFormat = "<span class='fa fa-chevron-left'></span>",
                           LinkToNextPageFormat = "<span class='fa fa-chevron-right'></span>",
                           LinkToLastPageFormat = "Fim",
                           ContainerDivClasses = new string[] { "d-flex justify-content-end" },
                           UlElementClasses = new string[] { "pagination" },
                           LiElementClasses = new string[] { "page-item" },
                           PageClasses = new string[] { "page-link bg-gradient-secondary" },
                       }
                       )
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>